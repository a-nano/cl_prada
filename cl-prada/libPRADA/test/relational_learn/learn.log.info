--- SYMBOLS ---
*State symbols*
table 1 primitive binary  
block 1 primitive binary  
ball 1 primitive binary  
on 2 primitive binary  
inhand 1 primitive binary  
upright 1 primitive binary  
out 1 primitive binary  
size 1 primitive integers  
clear 1 conjunction binary  <-- All Y  -on(Y X)  
inhandNil 0 conjunction binary  <-- All X  -inhand(X)  
above 2 transclosure binary  <-- + on 
aboveNotable 2 conjunction binary  <-- above(X Y) -table(Y)  
height 1 count integers  <-- Num Y  aboveNotable(X Y) 
sum_height 0 sum integers  <--  Sum height 
--- RULES ---
#rules = 3
# Rule #0  (1 out of 3)
ACTION:
  default()
CONTEXT:
  --
OUTCOMES:
  0.5 <no-change>
  0.5 <noise>

# Rule #1  (2 out of 3)
ACTION:
  puton(X)
CONTEXT:
  inhand(Y) 
OUTCOMES:
  0.71 on(Y X) upright(Y) -inhand(Y) 
  0.29 <noise>

# Rule #2  (3 out of 3)
ACTION:
  grab(X)
CONTEXT:
  on(X Y) 
OUTCOMES:
  0.721 inhand(X) -on(X Y) -upright(X) 
  0.279 <noise>


Responsibilities:
[0] 0 0
[1] 14 0.483
[2] 15 0.517
-> Coverage of non-default rules: 100%
-> Non-noise explanations: 86.2% (1. - 4/29)

--- STATISTICS ---
#rounds = 118
SEARCH OPERATORS:  (#applied  #improve  ratio     improveTotal  improveStep)
[0]   6  2  0.333  398  199  ExplainExperiences
[1]   4  1  0.25  186  186  ExplainExperiences_slim
[2]   1  0  0  0  ExplainExperiences_slim_comparingValues
[3]   81  78  0.963  42.6  0.547  DropContextLiterals_approximativeVersion
[4]   1  0  0  0  DropReferences
[5]   4  0  0  0  DropRules
[6]   4  0  0  0  SplitOnLiterals
[7]   1  0  0  0  AddLiterals
[8]   1  0  0  0  AddReferences
[9]   1  0  0  0  SplitOnEqualities
[10]   1  0  0  0  SplitOnInequalities
[11]   3  0  0  0  ChangeRange
[12]   2  0  0  0  MakeInterval
[13]   2  0  0  0  AddAbstractEquality
[14]   6  0  0  0  AbstractEquality
History of successful SO applications: 
[ 0 3 3 3 3 3 3 3 1 3 3 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 ]
History of SO applications: 
[ 3 12 13 6 14 0 3 3 3 5 3 3 3 3 1 3 3 0 3 3 3 3 14 3 3 3 3 3 3 3 3 3 3 3 6 3 14 0 3 3 3 3 3 0 5 3 3 3 5 3 3 3 3 3 3 3 3 14 3 3 14 3 3 3 3 3 1 3 3 3 1 3 3 3 11 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 3 3 3 0 3 3 3 3 3 3 11 1 0 12 8 4 7 9 6 5 13 14 10 11 2 ]
